/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Clip {
    #[serde(rename = "indexWithinMarker")]
    pub index_within_marker: i32,
    #[serde(rename = "indexWithinVideo")]
    pub index_within_video: i32,
    #[serde(rename = "markerId")]
    pub marker_id: i64,
    #[serde(rename = "markerTitle")]
    pub marker_title: String,
    /// Start and endpoint inside the video in seconds.
    #[serde(rename = "range")]
    pub range: Vec<models::ClipRangeInner>,
    #[serde(rename = "source")]
    pub source: models::VideoSource,
    #[serde(rename = "videoId")]
    pub video_id: String,
}

impl Clip {
    pub fn new(
        index_within_marker: i32,
        index_within_video: i32,
        marker_id: i64,
        marker_title: String,
        range: Vec<models::ClipRangeInner>,
        source: models::VideoSource,
        video_id: String,
    ) -> Clip {
        Clip {
            index_within_marker,
            index_within_video,
            marker_id,
            marker_title,
            range,
            source,
            video_id,
        }
    }
}
