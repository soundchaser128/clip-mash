/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClipLengthOptionsOneOf {
    #[serde(rename = "baseDuration")]
    pub base_duration: f64,
    #[serde(rename = "divisors")]
    pub divisors: Vec<f64>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl ClipLengthOptionsOneOf {
    pub fn new(base_duration: f64, divisors: Vec<f64>, r#type: Type) -> ClipLengthOptionsOneOf {
        ClipLengthOptionsOneOf {
            base_duration,
            divisors,
            r#type,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "randomized")]
    Randomized,
}

impl Default for Type {
    fn default() -> Type {
        Self::Randomized
    }
}
