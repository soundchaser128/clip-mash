/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClipsResponse {
    #[serde(
        rename = "beatOffsets",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub beat_offsets: Option<Option<Vec<f32>>>,
    #[serde(rename = "clips")]
    pub clips: Vec<models::Clip>,
    #[serde(rename = "streams")]
    pub streams: std::collections::HashMap<String, String>,
    #[serde(rename = "videos")]
    pub videos: Vec<models::VideoDto>,
}

impl ClipsResponse {
    pub fn new(
        clips: Vec<models::Clip>,
        streams: std::collections::HashMap<String, String>,
        videos: Vec<models::VideoDto>,
    ) -> ClipsResponse {
        ClipsResponse {
            beat_offsets: None,
            clips,
            streams,
            videos,
        }
    }
}
