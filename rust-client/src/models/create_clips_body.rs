/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateClipsBody {
    #[serde(rename = "clips")]
    pub clips: Box<models::ClipOptions>,
    #[serde(rename = "markers")]
    pub markers: Vec<models::SelectedMarker>,
    #[serde(
        rename = "seed",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub seed: Option<Option<String>>,
}

impl CreateClipsBody {
    pub fn new(
        clips: models::ClipOptions,
        markers: Vec<models::SelectedMarker>,
    ) -> CreateClipsBody {
        CreateClipsBody {
            clips: Box::new(clips),
            markers,
            seed: None,
        }
    }
}
