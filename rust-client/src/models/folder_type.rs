/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FolderType {
    #[serde(rename = "tempVideo")]
    TempVideo,
    #[serde(rename = "compilationVideo")]
    CompilationVideo,
    #[serde(rename = "downloadedVideo")]
    DownloadedVideo,
    #[serde(rename = "music")]
    Music,
    #[serde(rename = "database")]
    Database,
    #[serde(rename = "config")]
    Config,
    #[serde(rename = "previewImages")]
    PreviewImages,
}

impl std::fmt::Display for FolderType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::TempVideo => write!(f, "tempVideo"),
            Self::CompilationVideo => write!(f, "compilationVideo"),
            Self::DownloadedVideo => write!(f, "downloadedVideo"),
            Self::Music => write!(f, "music"),
            Self::Database => write!(f, "database"),
            Self::Config => write!(f, "config"),
            Self::PreviewImages => write!(f, "previewImages"),
        }
    }
}

impl Default for FolderType {
    fn default() -> FolderType {
        Self::TempVideo
    }
}
