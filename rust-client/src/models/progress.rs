/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Progress {
    #[serde(rename = "done")]
    pub done: bool,
    #[serde(
        rename = "etaSeconds",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub eta_seconds: Option<Option<f64>>,
    #[serde(rename = "itemsFinished")]
    pub items_finished: f64,
    #[serde(rename = "itemsTotal")]
    pub items_total: f64,
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    #[serde(rename = "videoId")]
    pub video_id: String,
}

impl Progress {
    pub fn new(
        done: bool,
        items_finished: f64,
        items_total: f64,
        message: String,
        timestamp: String,
        video_id: String,
    ) -> Progress {
        Progress {
            done,
            eta_seconds: None,
            items_finished,
            items_total,
            message,
            timestamp,
            video_id,
        }
    }
}
