/*
 * clip-mash
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.22.0-pre.1
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SelectedMarker {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "indexWithinVideo")]
    pub index_within_video: i32,
    #[serde(rename = "loops")]
    pub loops: i32,
    #[serde(
        rename = "selected",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub selected: Option<Option<bool>>,
    #[serde(rename = "selectedRange")]
    pub selected_range: Vec<models::ClipRangeInner>,
    #[serde(rename = "source")]
    pub source: models::VideoSource,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "videoId")]
    pub video_id: String,
}

impl SelectedMarker {
    pub fn new(
        id: i64,
        index_within_video: i32,
        loops: i32,
        selected_range: Vec<models::ClipRangeInner>,
        source: models::VideoSource,
        title: String,
        video_id: String,
    ) -> SelectedMarker {
        SelectedMarker {
            id,
            index_within_video,
            loops,
            selected: None,
            selected_range,
            source,
            title,
            video_id,
        }
    }
}
